The ``0-add_integer`` module 
======================

Using ``add_integer`` function to return the sum of two integers.
-------------------

Import Module:
	>>> add_integer = __import__('0-add_integer').add_integer

Usage Examples:
>>> add_integer(2, 3)
5
>>> add_integer(-2, -3)
-5
>>> add_integer(-2.0, -3.0)
-5
>>> add_integer(2.0, 3.0)
5
>>> add_integer(2.0, -3.0)
-1
>>> add_integer(2)
100
>>> add_integer()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() missing 1 required positional argument: 'a'
>>> add_integer(2, 3, 4)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
>>> add_integer('a', 3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/practice/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 6, in add_integer
    raise TypeError('a must be an integer')
TypeError: a must be an integer
>>> add_integer(2, 'a')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/practice/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 8, in add_integer
    raise TypeError('b must be an integer')
TypeError: b must be an integer
